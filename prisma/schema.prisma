// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  tasks          Task[]
  taskPrototypes TaskPrototype[]
  dailyRoutines  DailyRoutine[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

enum TaskType {
  DAILY
  FLOATING
}

model Task {
  id          String   @id @default(cuid())
  name        String
  description String?
  date        DateTime
  done        Boolean  @default(false)
  order       Int      @default(1)
  userEmail   String
  user        User     @relation(fields: [userEmail], references: [email])
  type        TaskType @default(FLOATING)

  @@index(fields: [userEmail, date, order])
}

model TaskPrototype {
  id          String  @id @default(cuid())
  name        String
  description String?
  weekDays    String
  order       Int     @default(1)
  userEmail   String
  user        User    @relation(fields: [userEmail], references: [email])

  @@unique([userEmail, name], name: "prismaislame")
  @@index(fields: [userEmail])
}

model DailyRoutine {
  id        String  @id @default(cuid())
  dateStr   String
  executed  Boolean
  userEmail String
  user      User    @relation(fields: [userEmail], references: [email])

  @@unique([userEmail, dateStr], name: "prismaislame")
  @@index(fields: [userEmail, dateStr])
}
